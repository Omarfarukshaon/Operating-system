#include<stdio.h>
#include<pthread.h>
#include<semaphore.h>
#include<unistd.h>

#define NUM_PHILOSOPHERS 5

sem_t chopstick[NUM_PHILOSOPHERS];
void* philosopher(void* num){
    int id =*(int*)num;
    printf("Philosopher %d is Thinking......\n",id);
    sleep(1);

    sem_wait(&chopstick[id]);
    sem_wait(&chopstick[(id+1) % NUM_PHILOSOPHERS]);

    printf("\nPhilosopher %d is Eating!!!!!!\n",id);
    sleep(2);

    sem_post(&chopstick[id]);
    sem_post(&chopstick[(id+1) % NUM_PHILOSOPHERS]);
    printf("\nPhilosopher %d finished eating and left chopsticks........\n",id);

return NULL;
}
int main(){
    pthread_t philosophers[NUM_PHILOSOPHERS];
    int ids[NUM_PHILOSOPHERS],i;

    for(i=0;i<NUM_PHILOSOPHERS;i++)
        sem_init(&chopstick[i],0,1);
    for(i=0;i<NUM_PHILOSOPHERS;i++){
        ids[i]=i;
        pthread_create(&philosophers[i],NULL,philosopher,&ids[i]);
    }
    for(i=0;i<NUM_PHILOSOPHERS;i++)
        pthread_join(philosophers[i],NULL);
    for(i=0;i<NUM_PHILOSOPHERS;i++)
        sem_destroy(&chopstick[i]);
    printf("\n\nAll philosophers have finished eating.\n");

return 0;
}
