#include<stdio.h>
int main()
{
    int i,n,j,tq;
    printf("Enter number of process:");
    scanf("%d",&n);
    int pid[n],at[n],bt[n],rt[n],ct[n],tat[n],wt[n],q[n*n],inqueue[n];
    for(i=0;i<n;i++)
        inqueue[i]=0;
    for(i=0;i<n;i++){
        pid[i]=i+1;
        printf("Enter arrival time & burst time for p%d:",i+1);
        scanf("%d%d",&at[i],&bt[i]);
        rt[i]=bt[i];
    }
    printf("Enter time quantun:");
    scanf("%d",&tq);
    int time=0,completed=0,front=0,rear=-1;
    float avgtat=0,avgwt=0;
    while(1){
        for(i=0;i<n;i++){
            if(at[i]<=time && rt[i]>0 && !inqueue[i]){
                q[++rear]=i;
                inqueue[i]=1;
            }
        }
        if(front>rear){
            int nextat=1e9,idx=-1;
            for(i=0;i<n;i++){
                if(rt[i]>0 && at[i]<nextat){
                    nextat=at[i];
                }
            }
            if(idx==-1)
                break;
            time=nextat;
            q[++rear]=idx;
            inqueue[idx]=1;
            continue;
        }
        i=q[front++];
        if(rt[i]>tq){
            rt[i]-=tq;
            time+=tq;
        }
        else{
            time+=rt[i];
            rt[i]=0;
            ct[i]=time;
            completed++;
            inqueue[i]=0;
        }
        for(j=0;j<n;j++){
           if(at[j]<=time && rt[j]>0 && !inqueue[j]){
                q[++rear]=j;
                inqueue[j]=1;
            }
        }
        if(rt[i]>0){
            q[++rear]=i;
        }
        if(completed==n)
                break;
    }
    printf("\nPID\tAT\tBT\tCT\tTAT\tWT\n");
    for(i=0;i<n;i++){
        tat[i]=ct[i]-at[i];
        wt[i]=tat[i]-bt[i];
        avgtat+=tat[i];
        avgwt+=wt[i];
        printf("p%d\t%d\t%d\t%d\t%d\t%d\n",pid[i],at[i],bt[i],ct[i],tat[i],wt[i]);
    }
    printf("\nAverage TAT=%.2f\n",avgtat/n);
    printf("\nAverage WT=%.2f\n",avgwt/n);
    return 0;
}
